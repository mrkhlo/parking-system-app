/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package mhalo.parking.service.core.domain;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@org.apache.avro.specific.AvroGenerated
public class PaymentRefundEventAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5142168578494139403L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PaymentRefundEventAvroModel\",\"namespace\":\"mhalo.parking.service.core.domain\",\"fields\":[{\"name\":\"payment\",\"type\":{\"type\":\"record\",\"name\":\"PaymentAvroModel\",\"fields\":[{\"name\":\"paymentId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"parkingId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"customerId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"transaction\",\"type\":{\"type\":\"record\",\"name\":\"TransactionAvroModel\",\"fields\":[{\"name\":\"transactionId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"providerTransactionId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"amount\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}},{\"name\":\"transactionType\",\"type\":{\"type\":\"enum\",\"name\":\"TransactionTypeAvroModel\",\"symbols\":[\"DEBIT\",\"CREDIT\"]}},{\"name\":\"transactionStatus\",\"type\":{\"type\":\"enum\",\"name\":\"TransactionStatusAvroModel\",\"symbols\":[\"SUCCESS\",\"FAILURE\"]}},{\"name\":\"executedAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}]}},{\"name\":\"paymentStatus\",\"type\":{\"type\":\"enum\",\"name\":\"PaymentStatusAvroModel\",\"symbols\":[\"DEBITED\",\"DEBIT_FAILED\",\"REFUNDED\",\"REFUND_FAILED\"]}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<PaymentRefundEventAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PaymentRefundEventAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<PaymentRefundEventAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<PaymentRefundEventAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<PaymentRefundEventAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this PaymentRefundEventAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a PaymentRefundEventAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a PaymentRefundEventAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static PaymentRefundEventAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private mhalo.parking.service.core.domain.PaymentAvroModel payment;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PaymentRefundEventAvroModel() {}

  /**
   * All-args constructor.
   * @param payment The new value for payment
   */
  public PaymentRefundEventAvroModel(mhalo.parking.service.core.domain.PaymentAvroModel payment) {
    this.payment = payment;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return payment;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: payment = (mhalo.parking.service.core.domain.PaymentAvroModel)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'payment' field.
   * @return The value of the 'payment' field.
   */
  public mhalo.parking.service.core.domain.PaymentAvroModel getPayment() {
    return payment;
  }


  /**
   * Sets the value of the 'payment' field.
   * @param value the value to set.
   */
  public void setPayment(mhalo.parking.service.core.domain.PaymentAvroModel value) {
    this.payment = value;
  }

  /**
   * Creates a new PaymentRefundEventAvroModel RecordBuilder.
   * @return A new PaymentRefundEventAvroModel RecordBuilder
   */
  public static mhalo.parking.service.core.domain.PaymentRefundEventAvroModel.Builder newBuilder() {
    return new mhalo.parking.service.core.domain.PaymentRefundEventAvroModel.Builder();
  }

  /**
   * Creates a new PaymentRefundEventAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PaymentRefundEventAvroModel RecordBuilder
   */
  public static mhalo.parking.service.core.domain.PaymentRefundEventAvroModel.Builder newBuilder(mhalo.parking.service.core.domain.PaymentRefundEventAvroModel.Builder other) {
    if (other == null) {
      return new mhalo.parking.service.core.domain.PaymentRefundEventAvroModel.Builder();
    } else {
      return new mhalo.parking.service.core.domain.PaymentRefundEventAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new PaymentRefundEventAvroModel RecordBuilder by copying an existing PaymentRefundEventAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new PaymentRefundEventAvroModel RecordBuilder
   */
  public static mhalo.parking.service.core.domain.PaymentRefundEventAvroModel.Builder newBuilder(mhalo.parking.service.core.domain.PaymentRefundEventAvroModel other) {
    if (other == null) {
      return new mhalo.parking.service.core.domain.PaymentRefundEventAvroModel.Builder();
    } else {
      return new mhalo.parking.service.core.domain.PaymentRefundEventAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for PaymentRefundEventAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PaymentRefundEventAvroModel>
    implements org.apache.avro.data.RecordBuilder<PaymentRefundEventAvroModel> {

    private mhalo.parking.service.core.domain.PaymentAvroModel payment;
    private mhalo.parking.service.core.domain.PaymentAvroModel.Builder paymentBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(mhalo.parking.service.core.domain.PaymentRefundEventAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.payment)) {
        this.payment = data().deepCopy(fields()[0].schema(), other.payment);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasPaymentBuilder()) {
        this.paymentBuilder = mhalo.parking.service.core.domain.PaymentAvroModel.newBuilder(other.getPaymentBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing PaymentRefundEventAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(mhalo.parking.service.core.domain.PaymentRefundEventAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.payment)) {
        this.payment = data().deepCopy(fields()[0].schema(), other.payment);
        fieldSetFlags()[0] = true;
      }
      this.paymentBuilder = null;
    }

    /**
      * Gets the value of the 'payment' field.
      * @return The value.
      */
    public mhalo.parking.service.core.domain.PaymentAvroModel getPayment() {
      return payment;
    }


    /**
      * Sets the value of the 'payment' field.
      * @param value The value of 'payment'.
      * @return This builder.
      */
    public mhalo.parking.service.core.domain.PaymentRefundEventAvroModel.Builder setPayment(mhalo.parking.service.core.domain.PaymentAvroModel value) {
      validate(fields()[0], value);
      this.paymentBuilder = null;
      this.payment = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'payment' field has been set.
      * @return True if the 'payment' field has been set, false otherwise.
      */
    public boolean hasPayment() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'payment' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public mhalo.parking.service.core.domain.PaymentAvroModel.Builder getPaymentBuilder() {
      if (paymentBuilder == null) {
        if (hasPayment()) {
          setPaymentBuilder(mhalo.parking.service.core.domain.PaymentAvroModel.newBuilder(payment));
        } else {
          setPaymentBuilder(mhalo.parking.service.core.domain.PaymentAvroModel.newBuilder());
        }
      }
      return paymentBuilder;
    }

    /**
     * Sets the Builder instance for the 'payment' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public mhalo.parking.service.core.domain.PaymentRefundEventAvroModel.Builder setPaymentBuilder(mhalo.parking.service.core.domain.PaymentAvroModel.Builder value) {
      clearPayment();
      paymentBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'payment' field has an active Builder instance
     * @return True if the 'payment' field has an active Builder instance
     */
    public boolean hasPaymentBuilder() {
      return paymentBuilder != null;
    }

    /**
      * Clears the value of the 'payment' field.
      * @return This builder.
      */
    public mhalo.parking.service.core.domain.PaymentRefundEventAvroModel.Builder clearPayment() {
      payment = null;
      paymentBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PaymentRefundEventAvroModel build() {
      try {
        PaymentRefundEventAvroModel record = new PaymentRefundEventAvroModel();
        if (paymentBuilder != null) {
          try {
            record.payment = this.paymentBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("payment"));
            throw e;
          }
        } else {
          record.payment = fieldSetFlags()[0] ? this.payment : (mhalo.parking.service.core.domain.PaymentAvroModel) defaultValue(fields()[0]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PaymentRefundEventAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<PaymentRefundEventAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PaymentRefundEventAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<PaymentRefundEventAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










