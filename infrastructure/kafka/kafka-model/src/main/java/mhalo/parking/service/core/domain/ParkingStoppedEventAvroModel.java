/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package mhalo.parking.service.core.domain;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@org.apache.avro.specific.AvroGenerated
public class ParkingStoppedEventAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5173868198595337467L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ParkingStoppedEventAvroModel\",\"namespace\":\"mhalo.parking.service.core.domain\",\"fields\":[{\"name\":\"parking\",\"type\":{\"type\":\"record\",\"name\":\"ParkingAvroModel\",\"fields\":[{\"name\":\"parkingId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"customerId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"zoneId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"trackingId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"licensePlateNumber\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"startingFee\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}},{\"name\":\"closingFee\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}],\"default\":null},{\"name\":\"startedAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"stoppedAt\",\"type\":[\"null\",{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}],\"default\":null}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<ParkingStoppedEventAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ParkingStoppedEventAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ParkingStoppedEventAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ParkingStoppedEventAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ParkingStoppedEventAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ParkingStoppedEventAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ParkingStoppedEventAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ParkingStoppedEventAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ParkingStoppedEventAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private mhalo.parking.service.core.domain.ParkingAvroModel parking;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ParkingStoppedEventAvroModel() {}

  /**
   * All-args constructor.
   * @param parking The new value for parking
   */
  public ParkingStoppedEventAvroModel(mhalo.parking.service.core.domain.ParkingAvroModel parking) {
    this.parking = parking;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return parking;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: parking = (mhalo.parking.service.core.domain.ParkingAvroModel)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'parking' field.
   * @return The value of the 'parking' field.
   */
  public mhalo.parking.service.core.domain.ParkingAvroModel getParking() {
    return parking;
  }


  /**
   * Sets the value of the 'parking' field.
   * @param value the value to set.
   */
  public void setParking(mhalo.parking.service.core.domain.ParkingAvroModel value) {
    this.parking = value;
  }

  /**
   * Creates a new ParkingStoppedEventAvroModel RecordBuilder.
   * @return A new ParkingStoppedEventAvroModel RecordBuilder
   */
  public static mhalo.parking.service.core.domain.ParkingStoppedEventAvroModel.Builder newBuilder() {
    return new mhalo.parking.service.core.domain.ParkingStoppedEventAvroModel.Builder();
  }

  /**
   * Creates a new ParkingStoppedEventAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ParkingStoppedEventAvroModel RecordBuilder
   */
  public static mhalo.parking.service.core.domain.ParkingStoppedEventAvroModel.Builder newBuilder(mhalo.parking.service.core.domain.ParkingStoppedEventAvroModel.Builder other) {
    if (other == null) {
      return new mhalo.parking.service.core.domain.ParkingStoppedEventAvroModel.Builder();
    } else {
      return new mhalo.parking.service.core.domain.ParkingStoppedEventAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new ParkingStoppedEventAvroModel RecordBuilder by copying an existing ParkingStoppedEventAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new ParkingStoppedEventAvroModel RecordBuilder
   */
  public static mhalo.parking.service.core.domain.ParkingStoppedEventAvroModel.Builder newBuilder(mhalo.parking.service.core.domain.ParkingStoppedEventAvroModel other) {
    if (other == null) {
      return new mhalo.parking.service.core.domain.ParkingStoppedEventAvroModel.Builder();
    } else {
      return new mhalo.parking.service.core.domain.ParkingStoppedEventAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for ParkingStoppedEventAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ParkingStoppedEventAvroModel>
    implements org.apache.avro.data.RecordBuilder<ParkingStoppedEventAvroModel> {

    private mhalo.parking.service.core.domain.ParkingAvroModel parking;
    private mhalo.parking.service.core.domain.ParkingAvroModel.Builder parkingBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(mhalo.parking.service.core.domain.ParkingStoppedEventAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.parking)) {
        this.parking = data().deepCopy(fields()[0].schema(), other.parking);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasParkingBuilder()) {
        this.parkingBuilder = mhalo.parking.service.core.domain.ParkingAvroModel.newBuilder(other.getParkingBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing ParkingStoppedEventAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(mhalo.parking.service.core.domain.ParkingStoppedEventAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.parking)) {
        this.parking = data().deepCopy(fields()[0].schema(), other.parking);
        fieldSetFlags()[0] = true;
      }
      this.parkingBuilder = null;
    }

    /**
      * Gets the value of the 'parking' field.
      * @return The value.
      */
    public mhalo.parking.service.core.domain.ParkingAvroModel getParking() {
      return parking;
    }


    /**
      * Sets the value of the 'parking' field.
      * @param value The value of 'parking'.
      * @return This builder.
      */
    public mhalo.parking.service.core.domain.ParkingStoppedEventAvroModel.Builder setParking(mhalo.parking.service.core.domain.ParkingAvroModel value) {
      validate(fields()[0], value);
      this.parkingBuilder = null;
      this.parking = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'parking' field has been set.
      * @return True if the 'parking' field has been set, false otherwise.
      */
    public boolean hasParking() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'parking' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public mhalo.parking.service.core.domain.ParkingAvroModel.Builder getParkingBuilder() {
      if (parkingBuilder == null) {
        if (hasParking()) {
          setParkingBuilder(mhalo.parking.service.core.domain.ParkingAvroModel.newBuilder(parking));
        } else {
          setParkingBuilder(mhalo.parking.service.core.domain.ParkingAvroModel.newBuilder());
        }
      }
      return parkingBuilder;
    }

    /**
     * Sets the Builder instance for the 'parking' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public mhalo.parking.service.core.domain.ParkingStoppedEventAvroModel.Builder setParkingBuilder(mhalo.parking.service.core.domain.ParkingAvroModel.Builder value) {
      clearParking();
      parkingBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'parking' field has an active Builder instance
     * @return True if the 'parking' field has an active Builder instance
     */
    public boolean hasParkingBuilder() {
      return parkingBuilder != null;
    }

    /**
      * Clears the value of the 'parking' field.
      * @return This builder.
      */
    public mhalo.parking.service.core.domain.ParkingStoppedEventAvroModel.Builder clearParking() {
      parking = null;
      parkingBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ParkingStoppedEventAvroModel build() {
      try {
        ParkingStoppedEventAvroModel record = new ParkingStoppedEventAvroModel();
        if (parkingBuilder != null) {
          try {
            record.parking = this.parkingBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("parking"));
            throw e;
          }
        } else {
          record.parking = fieldSetFlags()[0] ? this.parking : (mhalo.parking.service.core.domain.ParkingAvroModel) defaultValue(fields()[0]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ParkingStoppedEventAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<ParkingStoppedEventAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ParkingStoppedEventAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<ParkingStoppedEventAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










